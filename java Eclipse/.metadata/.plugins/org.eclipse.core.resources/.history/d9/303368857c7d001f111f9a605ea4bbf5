package Entity;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

public class Divisors implements Runnable {
	
	private int num;
	private Thread t;
	
	
	
	public Divisors(int num) {
		this.num = num;
		t = new Thread(this);
	}

	@Override
	public void run() {
		
		System.out.println(FindDivisors(num));
		List<Integer> l = FindDivisors(num);
		ObjectOutputStream oos = null;
		BufferedWriter br = null;
		try {
			//BufferedWriter br = new BufferedWriter(new FileWriter("D:\\know-t\\Divisor.txt"));
			BufferedReader br1 = new BufferedReader(new FileReader("D:\\know-it\\Divisor.txt"));
			 br = new BufferedWriter(new FileWriter("D:\\know-it\\Divisor.txt"));

			 oos = new ObjectOutputStream(new FileOutputStream("D:\\know-it\\Divisor.txt"));
			
			for(int i=0; i<l.size(); i++) {
				
			//	oos.write(l.get(i));
			//	br.write(l.get(i));
				System.out.println(br1.readLine()); 
				
				}
			
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		finally {
			try {
				oos.close();
			} catch (IOException e) {
				
				e.printStackTrace();
			}
		}
		
		
		
	}
	public List<Integer> FindDivisors(int num) {
		
		List <Integer> l = new ArrayList<>();
		
		for(int i=1; i<=num; i++) {
			
			if(num%i ==0) {
				
				l.add(i);
			}
		}
		
		return l;
		
	}
	
	public Thread getT() {
		return t;
	}

	
}
